import QtQuick 2.0
import Sailfish.Silica 1.0

import harbour.smscontrol.DeviceStorage 1.0


Dialog {
    id: dia
    canAccept: false

    onAccepted: {
        pageStack.replace(Qt.resolvedUrl("MainPage.qml"));
    }

    function acceptor() {
        dia.canAccept= true;
        dia.accept();
    }


    SilicaFlickable {
        anchors.fill: parent
        contentHeight: col.height + Theme.paddingLarge
        contentWidth: parent.width

        VerticalScrollDecorator {}

        Column {
            id: col
            spacing: Theme.paddingLarge
            width: parent.width -Theme.paddingMedium *2
            x: Theme.paddingMedium

            PageHeader {
                title: "Disclaimer"
            }

            /*DialogHeader {
                acceptText: qsTr("Accept Disclaimer")
            }*/

            SectionHeader {
                text: "Costs"
            }
            Label {
                id: costs
                text: "Every interaction with a device causes at least one SMS from your phone and probably some more from the device. The SMS have to be paid by you, according to your contract with your phone company."
                font.pixelSize: Theme.fontSizeExtraSmall
                wrapMode: Text.WordWrap
                anchors {
                    left: parent.left
                    right: parent.right
                }
            }

            SectionHeader {
                text: "Functionality"
            }
            Label {
                id: funct
                text: "Without limitation of the foregoing, Kumivene expressly does not warrant that:"
                font.pixelSize: Theme.fontSizeExtraSmall
                wrapMode: Text.WordWrap
                anchors {
                    left: parent.left
                    right: parent.right
                }
            }
            Label {
                id: functa
                text: "(b) the software or the software content will be free of bugs, errors, license claims, viruses or other defects;"
                font.pixelSize: Theme.fontSizeExtraSmall
                wrapMode: Text.WordWrap
                anchors {
                    left: parent.left
                    right: parent.right
                }
            }
            Label {
                id: functc
                text: "(c) any results, output, or data provided through or generated by the software will be accurate, up-to-date, complete or reliable;"
                font.pixelSize: Theme.fontSizeExtraSmall
                wrapMode: Text.WordWrap
                anchors {
                    left: parent.left
                    right: parent.right
                }
            }
            Label {
                id: functd
                text: "(d) the software will be compatible with third party software;"
                font.pixelSize: Theme.fontSizeExtraSmall
                wrapMode: Text.WordWrap
                anchors {
                    left: parent.left
                    right: parent.right
                }
            }
            Label {
                id: functe
                text: "(e) the software will be compatible with third party hardware; so especially unexpected behaviour of devices may occur. TEST the commands when in front of the device before using the App from remote"
                font.pixelSize: Theme.fontSizeExtraSmall
                wrapMode: Text.WordWrap
                anchors {
                    left: parent.left
                    right: parent.right
                }
            }
            Label {
                id: functf
                text: "(f) any errors in the software will be corrected;"
                font.pixelSize: Theme.fontSizeExtraSmall
                wrapMode: Text.WordWrap
                anchors {
                    left: parent.left
                    right: parent.right
                }
            }
            Label {
                id: functg
                text: "(g) further devices will be added."
                font.pixelSize: Theme.fontSizeExtraSmall
                wrapMode: Text.WordWrap
                anchors {
                    left: parent.left
                    right: parent.right
                }
            }

            Label {
                id: bottom
                text: ""
            }

            Button {
                text: qsTr("Accept");
                onClicked: acceptor()
            }
       }
    }
}
